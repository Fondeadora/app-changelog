{"version":3,"file":"index.js","sources":["../dist-src/utils.js","../dist-src/get-file-content.js","../dist-src/compose-create-or-update-text-file.js","../dist-src/version.js","../dist-src/index.js"],"sourcesContent":["/* istanbul ignore file */\n// universal implementation of nodeUtf8ToBase64/nodeBase64ToUtf8 methods for browsers, Node, and Deno.\n//\n// - good docs on base64\n//   https://developer.mozilla.org/en-US/docs/Glossary/Base64\n// - great insights on why escape/unescape is needed\n//   https://stackoverflow.com/questions/30631927/converting-to-base64-in-javascript-without-deprecated-escape-call\n//\n// Known problem with atob/btoa:\n// https://github.com/octokit/plugin-create-or-update-text-file.js/issues/15\nconst isNode = globalThis.process &&\n    globalThis.process.release &&\n    globalThis.process.release.name;\nfunction nodeUtf8ToBase64(data) {\n    return Buffer.from(data, \"utf-8\").toString(\"base64\");\n}\nfunction nodeBase64ToUtf8(data) {\n    return Buffer.from(data, \"base64\").toString(\"utf-8\");\n}\n// browserUtf8ToBase64 & browserBase64ToUtf8\n// (c) Brandon Rylow - CC BY-SA 4.0\n// https://stackoverflow.com/a/30106551/206879\nfunction browserUtf8ToBase64(data) {\n    // first we use encodeURIComponent to get percent-encoded UTF-8,\n    // then we convert the percent encodings into raw bytes which\n    // can be fed into btoa.\n    return btoa(encodeURIComponent(data).replace(/%([0-9A-F]{2})/g, function toSolidBytes(_match, p1) {\n        // @ts-expect-error - we know what we are doing here\n        return String.fromCharCode(\"0x\" + p1);\n    }));\n}\nfunction browserBase64ToUtf8(data) {\n    // Going backwards: from bytestream, to percent-encoding, to original string.\n    return decodeURIComponent(atob(data)\n        .split(\"\")\n        .map(function (c) {\n        return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n    })\n        .join(\"\"));\n}\nexport const utf8ToBase64 = isNode ? nodeUtf8ToBase64 : browserUtf8ToBase64;\nexport const base64ToUtf8 = isNode ? nodeBase64ToUtf8 : browserBase64ToUtf8;\n","import { RequestError } from \"@octokit/request-error\";\nimport { base64ToUtf8 } from \"./utils\";\n/**\n * Normalizes the retrival of a repository file content.\n *\n * The \"Get repository content\" API can respond in 4 different ways depending\n * on what exists at the given path\n *\n * - An array of folder item objects\n * - An object with type = symlink\n * - An object with type = submodule\n * - An object with type = file\n *\n * We are only interested in the last type, and throw errors in all other cases\n *\n * @see https://docs.github.com/en/rest/reference/repos#get-repository-content\n * @param octokit Octokit instance\n * @param options\n */\nexport async function getFileContents(octokit, options) {\n    const route = \"GET /repos/{owner}/{repo}/contents/{path}\";\n    const { branch, ...parameters } = options;\n    const getContentsParameters = {\n        ...parameters,\n        ref: branch,\n    };\n    const requestOptions = octokit.request.endpoint(route, getContentsParameters);\n    const { data } = await octokit\n        .request(route, getContentsParameters)\n        .catch((error) => {\n        /* istanbul ignore if */\n        if (error.status !== 404)\n            throw error;\n        return {\n            data: {\n                content: null,\n                type: \"\",\n                sha: \"\",\n            },\n        };\n    });\n    if (Array.isArray(data)) {\n        throw new RequestError(`[@octokit/plugin-create-or-update-text-file] ${requestOptions.url} is a directory`, 403, {\n            request: requestOptions,\n        });\n    }\n    if (!(\"sha\" in data && \"content\" in data)) {\n        throw new RequestError(`[@octokit/plugin-create-or-update-text-file] ${requestOptions.url} is not a file, but a ${data.type}`, 403, {\n            request: requestOptions,\n        });\n    }\n    if (data.content === null) {\n        return {\n            content: null,\n        };\n    }\n    try {\n        return {\n            content: base64ToUtf8(data.content),\n            sha: data.sha,\n        };\n    }\n    catch (error) {\n        /* istanbul ignore next */\n        if (error.message !== \"URI malformed\")\n            throw error;\n        /* istanbul ignore next error is only thrown in browsers, not node. */\n        throw new RequestError(`[@octokit/plugin-create-or-update-text-file] ${requestOptions.url} is a binary file, only text files are supported`, 403, {\n            request: requestOptions,\n        });\n    }\n}\n","import { getFileContents } from \"./get-file-content\";\nimport { utf8ToBase64 } from \"./utils\";\n/**\n *\n * @param octokit Octokit instance\n * @param options\n */\nexport async function composeCreateOrUpdateTextFile(octokit, options) {\n    const { content: contentOrFn, message, committer, author, ...getOptions } = options;\n    const currentFile = await getFileContents(octokit, getOptions);\n    // normalize content\n    const content = typeof contentOrFn === \"function\"\n        ? await contentOrFn({\n            exists: currentFile.content !== null,\n            content: currentFile.content,\n        })\n        : contentOrFn;\n    // do nothing if there are no changes\n    if (content === currentFile.content) {\n        return {\n            updated: false,\n            deleted: false,\n            data: {},\n            headers: {},\n        };\n    }\n    // delete file if it exists and new content is `null`\n    if (currentFile.sha && content === null) {\n        // https://docs.github.com/en/rest/reference/repos#delete-a-file\n        const response = await octokit.request(\"DELETE /repos/{owner}/{repo}/contents/{path}\", {\n            ...getOptions,\n            message,\n            sha: currentFile.sha,\n        });\n        return {\n            ...response,\n            updated: true,\n            deleted: true,\n        };\n    }\n    // update file to new content\n    // https://docs.github.com/en/rest/reference/repos#create-or-update-file-contents\n    const response = await octokit.request(\"PUT /repos/{owner}/{repo}/contents/{path}\", {\n        ...getOptions,\n        message,\n        ...currentFile,\n        content: utf8ToBase64(content),\n    });\n    return {\n        ...response,\n        updated: true,\n        deleted: false,\n        content: content,\n    };\n}\n","export const VERSION = \"2.0.4\";\n","import { composeCreateOrUpdateTextFile } from \"./compose-create-or-update-text-file\";\nimport { VERSION } from \"./version\";\nexport { composeCreateOrUpdateTextFile } from \"./compose-create-or-update-text-file\";\n/**\n * @param octokit Octokit instance\n */\nexport function createOrUpdateTextFile(octokit) {\n    return {\n        createOrUpdateTextFile(options) {\n            return composeCreateOrUpdateTextFile(octokit, options);\n        },\n    };\n}\ncreateOrUpdateTextFile.VERSION = VERSION;\n"],"names":["isNode","globalThis","process","release","name","nodeUtf8ToBase64","data","Buffer","from","toString","nodeBase64ToUtf8","browserUtf8ToBase64","btoa","encodeURIComponent","replace","toSolidBytes","_match","p1","String","fromCharCode","browserBase64ToUtf8","decodeURIComponent","atob","split","map","c","charCodeAt","slice","join","utf8ToBase64","base64ToUtf8","getFileContents","octokit","options","route","branch","parameters","getContentsParameters","ref","requestOptions","request","endpoint","catch","error","status","content","type","sha","Array","isArray","RequestError","url","message","composeCreateOrUpdateTextFile","contentOrFn","committer","author","getOptions","currentFile","exists","updated","deleted","headers","response","VERSION","createOrUpdateTextFile"],"mappings":"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"}